// <auto-generated />
using System;
using EntitySednica.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntitySednica.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250817211616_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntitySednica.Models.DnevniRed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_dnevni_red");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SednicaId")
                        .HasColumnType("int")
                        .HasColumnName("id_sednice");

                    b.HasKey("Id");

                    b.HasIndex("SednicaId");

                    b.ToTable("dnevni_red");
                });

            modelBuilder.Entity("EntitySednica.Models.Glasanje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_glasanja");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Glas")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("LiceId")
                        .HasColumnType("int")
                        .HasColumnName("id_lica");

                    b.Property<int>("PitanjeId")
                        .HasColumnType("int")
                        .HasColumnName("id_pitanja");

                    b.HasKey("Id");

                    b.HasIndex("LiceId");

                    b.HasIndex("PitanjeId");

                    b.ToTable("glasanje");
                });

            modelBuilder.Entity("EntitySednica.Models.Lice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_lica");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2")
                        .HasColumnName("datumr");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("korisnicko_ime");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pol")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("PozicijaId")
                        .HasColumnType("int")
                        .HasColumnName("pozicija");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StrankaId")
                        .HasColumnType("int")
                        .HasColumnName("stranka");

                    b.HasKey("Id");

                    b.HasIndex("PozicijaId");

                    b.HasIndex("StrankaId");

                    b.ToTable("lica");
                });

            modelBuilder.Entity("EntitySednica.Models.Mandat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_mandata");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LiceId")
                        .HasColumnType("int")
                        .HasColumnName("id_lica");

                    b.Property<int>("SazivId")
                        .HasColumnType("int")
                        .HasColumnName("id_saziva");

                    b.Property<int>("StrankaId")
                        .HasColumnType("int")
                        .HasColumnName("id_stranke");

                    b.HasKey("Id");

                    b.HasIndex("LiceId");

                    b.HasIndex("SazivId");

                    b.HasIndex("StrankaId");

                    b.ToTable("mandat");
                });

            modelBuilder.Entity("EntitySednica.Models.Pitanje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pitanja");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DnevniRedId")
                        .HasColumnType("int")
                        .HasColumnName("id_dnevni_red");

                    b.Property<int>("RedniBroj")
                        .HasColumnType("int")
                        .HasColumnName("redni_broj");

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DnevniRedId");

                    b.ToTable("pitanja");
                });

            modelBuilder.Entity("EntitySednica.Models.Pozicija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pozicije");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("naziv_pozicije");

                    b.HasKey("Id");

                    b.ToTable("pozicija");
                });

            modelBuilder.Entity("EntitySednica.Models.Saziv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_saziva");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Kraj")
                        .HasColumnType("datetime2");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Pocetak")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("saziv");
                });

            modelBuilder.Entity("EntitySednica.Models.Sednica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_sednice");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZasedanjeId")
                        .HasColumnType("int")
                        .HasColumnName("zasedanje_id");

                    b.HasKey("Id");

                    b.HasIndex("ZasedanjeId");

                    b.ToTable("sednica");
                });

            modelBuilder.Entity("EntitySednica.Models.Stranka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_stranke");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("naziv_stranke");

                    b.HasKey("Id");

                    b.ToTable("stranka");
                });

            modelBuilder.Entity("EntitySednica.Models.TipZasedanja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tip_zasedanja");

                    b.HasKey("Id");

                    b.ToTable("tipovi");
                });

            modelBuilder.Entity("EntitySednica.Models.Zasedanje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_zasedanja");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("naziv_zasedanja");

                    b.Property<int>("SazivId")
                        .HasColumnType("int")
                        .HasColumnName("id_saziv");

                    b.Property<int>("TipZasedanjaId")
                        .HasColumnType("int")
                        .HasColumnName("tip");

                    b.HasKey("Id");

                    b.HasIndex("SazivId");

                    b.HasIndex("TipZasedanjaId");

                    b.ToTable("zasedanje");
                });

            modelBuilder.Entity("EntitySednica.Models.DnevniRed", b =>
                {
                    b.HasOne("EntitySednica.Models.Sednica", "Sednica")
                        .WithMany()
                        .HasForeignKey("SednicaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sednica");
                });

            modelBuilder.Entity("EntitySednica.Models.Glasanje", b =>
                {
                    b.HasOne("EntitySednica.Models.Lice", "Lice")
                        .WithMany()
                        .HasForeignKey("LiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EntitySednica.Models.Pitanje", "Pitanje")
                        .WithMany()
                        .HasForeignKey("PitanjeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lice");

                    b.Navigation("Pitanje");
                });

            modelBuilder.Entity("EntitySednica.Models.Lice", b =>
                {
                    b.HasOne("EntitySednica.Models.Pozicija", "Pozicija")
                        .WithMany()
                        .HasForeignKey("PozicijaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EntitySednica.Models.Stranka", "Stranka")
                        .WithMany()
                        .HasForeignKey("StrankaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pozicija");

                    b.Navigation("Stranka");
                });

            modelBuilder.Entity("EntitySednica.Models.Mandat", b =>
                {
                    b.HasOne("EntitySednica.Models.Lice", "Lice")
                        .WithMany()
                        .HasForeignKey("LiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EntitySednica.Models.Saziv", "Saziv")
                        .WithMany()
                        .HasForeignKey("SazivId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EntitySednica.Models.Stranka", "Stranka")
                        .WithMany()
                        .HasForeignKey("StrankaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lice");

                    b.Navigation("Saziv");

                    b.Navigation("Stranka");
                });

            modelBuilder.Entity("EntitySednica.Models.Pitanje", b =>
                {
                    b.HasOne("EntitySednica.Models.DnevniRed", "DnevniRed")
                        .WithMany()
                        .HasForeignKey("DnevniRedId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DnevniRed");
                });

            modelBuilder.Entity("EntitySednica.Models.Sednica", b =>
                {
                    b.HasOne("EntitySednica.Models.Zasedanje", "Zasedanje")
                        .WithMany()
                        .HasForeignKey("ZasedanjeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Zasedanje");
                });

            modelBuilder.Entity("EntitySednica.Models.Zasedanje", b =>
                {
                    b.HasOne("EntitySednica.Models.Saziv", "Saziv")
                        .WithMany()
                        .HasForeignKey("SazivId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EntitySednica.Models.TipZasedanja", "TipZasedanja")
                        .WithMany()
                        .HasForeignKey("TipZasedanjaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Saziv");

                    b.Navigation("TipZasedanja");
                });
#pragma warning restore 612, 618
        }
    }
}
